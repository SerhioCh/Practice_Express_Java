1. Хранение уникальных идентификаторов пользователей (Множество)  - Set
В системе есть список уникальных идентификаторов пользователей. Необходимо быстро проверять, присутствует ли пользователь с заданным идентификатором.


2. Очередь задач для обработки (Очередь)
Система должна обрабатывать запросы в порядке их поступления. Требуется поддерживать последовательность.


3. Хранение ключей и значений (Словарь)
Необходимо хранить настройки приложения, где каждый параметр имеет имя (ключ) и значение.


4. Иерархия сотрудников компании (Дерево)
Требуется сохранить данные о сотрудниках в виде дерева: каждый сотрудник имеет подчинённых.


5. Поиск элементов по приоритету (Heap)
Система обрабатывает задачи, причём приоритет задачи определяет, когда она будет выполнена.


6. Управление друзьями пользователя (Графы)
Требуется хранить связи между пользователями в социальной сети, где каждый пользователь может быть связан с несколькими другими.


7. Упорядоченный список (Список)
Необходимо хранить список чисел в отсортированном виде, чтобы быстро находить минимальное и максимальное значения.


8. Учет посещений страниц (Словарь)
Система должна отслеживать уникальные посещения страниц на веб-сайте и вести подсчёт общего числа посещений.

Подсказка: выбор структуры данных может быть разный в зависимости от уточнения, уникальные ИЛИ не уникальные общие посещения мы считаем.


9. История действий пользователя(Стэк)
Необходимо хранить список последних действий пользователя, чтобы можно было отменить или повторить действия.


10. Структура телефонной книги (Словарь)
Требуется хранить имена и номера телефонов, чтобы быстро находить номер по имени.


11. Проверка корректности скобочной последовательности (Стэк)
Пользователь вводит строку, содержащую скобки. Нужно определить, правильно ли расставлены скобки.


12. Хранение объектов с частым доступом (Массив)  ||  хочется добавить ещё Список (т.к часто изменяются)
Требуется хранить фиксированное количество элементов, которые часто изменяются, с быстрым доступом к любому из них.
Но у массива поиск по индексу работает быстрее О(1) , чем у списка по адресу O(n)

13. Уникальные слова в тексте (Set)
Дан текст, нужно сохранить все уникальные слова и определить их количество.



14. Структура электронной очереди (Очередь)
В поликлинике пациенты записываются в очередь, и каждый должен быть вызван в порядке записи.


15. Список дел (Словарь) || (Список)
Требуется сохранить список задач, который можно пополнять, удалять и сортировать по сроку выполнения.
//C списком проще работать в плане сортивроки удаления и добавления

16. Анализ частоты слов (Словарь)
Требуется определить, сколько раз каждое слово встречается в тексте.
Hash Map

17. Система рейтингов (Словарь на основе дерева)
Вам нужно хранить список игроков с их рейтингами, чтобы быстро находить игрока с самым высоким рейтингом.
У нас сразу есть отсортированный порядок и мы можем искать по 1 методу за О(1)

18. Проверка дубликатов в потоке данных (Множество)
Данные поступают в потоковом режиме, и нужно проверять, был ли данный элемент уже получен ранее.
HashSet Проверяем наличие элемента за о(1)